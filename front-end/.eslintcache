[{"C:\\Mefnevan\\front-end\\src\\index.js":"1","C:\\Mefnevan\\front-end\\src\\reportWebVitals.js":"2","C:\\Mefnevan\\front-end\\src\\App.js":"3","C:\\Mefnevan\\front-end\\src\\components\\common\\logger.js":"4","C:\\Mefnevan\\front-end\\src\\components\\layouts\\AppLayout.js":"5","C:\\Mefnevan\\front-end\\src\\routes\\AppRoute.js":"6","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\NotFound.js":"7","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\ForgotPassword.js":"8","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\Login.js":"9","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\logout.js":"10","C:\\Mefnevan\\front-end\\src\\components\\modules\\Main\\Dashboard.js":"11","C:\\Mefnevan\\front-end\\src\\components\\modules\\Setting\\setting.js":"12","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponder.js":"13","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderCreate.js":"14","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderEdit.js":"15","C:\\Mefnevan\\front-end\\src\\config.js":"16","C:\\Mefnevan\\front-end\\src\\services\\setting.js":"17","C:\\Mefnevan\\front-end\\src\\helper\\loginHelper.js":"18","C:\\Mefnevan\\front-end\\src\\services\\autoResponderServices.js":"19","C:\\Mefnevan\\front-end\\src\\services\\authService.js":"20","C:\\Mefnevan\\front-end\\src\\helper\\helper.js":"21","C:\\Mefnevan\\front-end\\src\\components\\modules\\Common\\sidebar.js":"22","C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroup.js":"23","C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupCreate.js":"24","C:\\Mefnevan\\front-end\\src\\services\\messageGroupService.js":"25","C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupEdit.js":"26","C:\\GrammyWammy\\front-end\\src\\index.js":"27","C:\\GrammyWammy\\front-end\\src\\reportWebVitals.js":"28","C:\\GrammyWammy\\front-end\\src\\App.js":"29","C:\\GrammyWammy\\front-end\\src\\components\\common\\logger.js":"30","C:\\GrammyWammy\\front-end\\src\\components\\layouts\\AppLayout.js":"31","C:\\GrammyWammy\\front-end\\src\\routes\\AppRoute.js":"32","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\Login.js":"33","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\NotFound.js":"34","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\ForgotPassword.js":"35","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\logout.js":"36","C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupCreate.js":"37","C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroup.js":"38","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Main\\Dashboard.js":"39","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Setting\\setting.js":"40","C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupEdit.js":"41","C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponder.js":"42","C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderCreate.js":"43","C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderEdit.js":"44","C:\\GrammyWammy\\front-end\\src\\config.js":"45","C:\\GrammyWammy\\front-end\\src\\services\\authService.js":"46","C:\\GrammyWammy\\front-end\\src\\services\\messageGroupService.js":"47","C:\\GrammyWammy\\front-end\\src\\services\\setting.js":"48","C:\\GrammyWammy\\front-end\\src\\services\\autoResponderServices.js":"49","C:\\GrammyWammy\\front-end\\src\\helper\\loginHelper.js":"50","C:\\GrammyWammy\\front-end\\src\\helper\\helper.js":"51","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Common\\sidebar.js":"52"},{"size":554,"mtime":1613127717779,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1613127717781,"results":"55","hashOfConfig":"54"},{"size":353,"mtime":1613127717725,"results":"56","hashOfConfig":"54"},{"size":219,"mtime":1613127717730,"results":"57","hashOfConfig":"54"},{"size":328,"mtime":1613127717731,"results":"58","hashOfConfig":"54"},{"size":2576,"mtime":1613581359352,"results":"59","hashOfConfig":"54"},{"size":289,"mtime":1613127717738,"results":"60","hashOfConfig":"54"},{"size":6995,"mtime":1613377899575,"results":"61","hashOfConfig":"54"},{"size":7703,"mtime":1613216664732,"results":"62","hashOfConfig":"54"},{"size":2515,"mtime":1613127717750,"results":"63","hashOfConfig":"54"},{"size":11507,"mtime":1613216152650,"results":"64","hashOfConfig":"54"},{"size":12038,"mtime":1613127717759,"results":"65","hashOfConfig":"54"},{"size":7314,"mtime":1613746274177,"results":"66","hashOfConfig":"54"},{"size":7136,"mtime":1613127717753,"results":"67","hashOfConfig":"54"},{"size":8916,"mtime":1613127717754,"results":"68","hashOfConfig":"54"},{"size":213,"mtime":1613733710416,"results":"69","hashOfConfig":"54"},{"size":2831,"mtime":1613127717787,"results":"70","hashOfConfig":"54"},{"size":892,"mtime":1613203949947,"results":"71","hashOfConfig":"54"},{"size":2836,"mtime":1613127717786,"results":"72","hashOfConfig":"54"},{"size":1574,"mtime":1613236834018,"results":"73","hashOfConfig":"54"},{"size":1971,"mtime":1613127717763,"results":"74","hashOfConfig":"54"},{"size":4595,"mtime":1613390396485,"results":"75","hashOfConfig":"54"},{"size":6984,"mtime":1613745530709,"results":"76","hashOfConfig":"54"},{"size":5198,"mtime":1613571969987,"results":"77","hashOfConfig":"54"},{"size":2183,"mtime":1613747300093,"results":"78","hashOfConfig":"54"},{"size":5819,"mtime":1613628574264,"results":"79","hashOfConfig":"54"},{"size":556,"mtime":1614672167299,"results":"80","hashOfConfig":"81"},{"size":375,"mtime":1614616528544,"results":"82","hashOfConfig":"81"},{"size":355,"mtime":1614672066737,"results":"83","hashOfConfig":"81"},{"size":219,"mtime":1614616528499,"results":"84","hashOfConfig":"81"},{"size":330,"mtime":1614701092188,"results":"85","hashOfConfig":"81"},{"size":2576,"mtime":1614616528544,"results":"86","hashOfConfig":"81"},{"size":8199,"mtime":1614784528295,"results":"87","hashOfConfig":"81"},{"size":289,"mtime":1614616528504,"results":"88","hashOfConfig":"81"},{"size":6995,"mtime":1614616528499,"results":"89","hashOfConfig":"81"},{"size":2561,"mtime":1614784952582,"results":"90","hashOfConfig":"81"},{"size":5198,"mtime":1614616528524,"results":"91","hashOfConfig":"81"},{"size":6984,"mtime":1614616528519,"results":"92","hashOfConfig":"81"},{"size":11224,"mtime":1614932489728,"results":"93","hashOfConfig":"81"},{"size":12038,"mtime":1614616528524,"results":"94","hashOfConfig":"81"},{"size":5819,"mtime":1614616528524,"results":"95","hashOfConfig":"81"},{"size":7314,"mtime":1614616528509,"results":"96","hashOfConfig":"81"},{"size":7136,"mtime":1614616528514,"results":"97","hashOfConfig":"81"},{"size":8916,"mtime":1614616528514,"results":"98","hashOfConfig":"81"},{"size":213,"mtime":1614751699019,"results":"99","hashOfConfig":"81"},{"size":1574,"mtime":1614616528544,"results":"100","hashOfConfig":"81"},{"size":2183,"mtime":1614616528549,"results":"101","hashOfConfig":"81"},{"size":2831,"mtime":1614616528554,"results":"102","hashOfConfig":"81"},{"size":2836,"mtime":1614616528549,"results":"103","hashOfConfig":"81"},{"size":891,"mtime":1614854673743,"results":"104","hashOfConfig":"81"},{"size":1971,"mtime":1614616528524,"results":"105","hashOfConfig":"81"},{"size":4595,"mtime":1614616528514,"results":"106","hashOfConfig":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"1ua1jj8",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"109"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"109"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"109"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"109"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"109"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"109"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"109"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},"1tt6fqb",{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"179"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"179"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"179"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"179"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"179"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"179"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"179"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"179"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"179"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"179"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"179"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"179"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"179"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"179"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"179"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"233"},"C:\\Mefnevan\\front-end\\src\\index.js",[],["234","235"],"C:\\Mefnevan\\front-end\\src\\reportWebVitals.js",[],"C:\\Mefnevan\\front-end\\src\\App.js",[],"C:\\Mefnevan\\front-end\\src\\components\\common\\logger.js",[],"C:\\Mefnevan\\front-end\\src\\components\\layouts\\AppLayout.js",[],"C:\\Mefnevan\\front-end\\src\\routes\\AppRoute.js",["236"],"import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport log from \"../components/common/logger\";\r\nimport { Container } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\n\r\nconst Login = lazy(() => import(\"../components/modules/Auth/Login\"));\r\nconst ForgotPassword = lazy(() => import(\"../components/modules/Auth/ForgotPassword\"));\r\nconst MessageGroup = lazy(() => import(\"../components/modules/MessageGroup/messageGroup\"));\r\nconst MessageGroupCreate = lazy(() => import(\"../components/modules/MessageGroup/messageGroupCreate\"));\r\nconst MessageGroupEdit = lazy(() =>  import(\"../components/modules/MessageGroup/messageGroupEdit\"));\r\nconst NotFound = lazy(() => import(\"../components/modules/Auth/NotFound\"));\r\nconst Dashboard = lazy(() => import(\"../components/modules/Main/Dashboard\"));\r\nconst Setting = lazy(() => import(\"../components/modules/Setting/setting\"));\r\nconst AutoResponder = lazy(() => import(\"../components/modules/AutoResponder/autoResponder\"));\r\nconst AutoResponderCreate = lazy(() =>  import(\"../components/modules/AutoResponder/autoResponderCreate\"))\r\nconst AutoResponderEdit = lazy(() =>  import(\"../components/modules/AutoResponder/autoResponderEdit\"));\r\nconst Logout  = lazy(() =>  import(\"../components/modules/Auth/logout\"));\r\nconst AppRoute = ({ sidebarIsOpen, toggleSidebar }) => {\r\n  log.info(\"**** AppRoute ****\");\r\n\r\n  return (\r\n    <Suspense fallback={<div />}>\r\n      <Container\r\n        fluid\r\n        className={classNames(\"content\", { \"is-open\": sidebarIsOpen })}\r\n      >\r\n        {/* <Topbar toggleSidebar={toggleSidebar} /> */}\r\n        <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\r\n        <Route  exact  path=\"/dashboard\" component={Dashboard} />\r\n        <Route  exact  path=\"/setting\" component={Setting} />\r\n        <Route  exact  path=\"/autoresponder\" component={AutoResponder} />\r\n        <Route  exact  path=\"/autorespondercreate\" component={AutoResponderCreate} />\r\n        <Route  exact  path=\"/autoresponderedit/:idfy\"  component={AutoResponderEdit} />\r\n        <Route  exact  path=\"/messageGroup\" component={MessageGroup} />\r\n        <Route  exact  path=\"/messagegroupcreate\" component={MessageGroupCreate} />\r\n        <Route  exact  path=\"/messagegroupedit/:idfy\"  component={MessageGroupEdit} />\r\n        <Route  exact  path=\"/logout\"  component={Logout} />\r\n        </Switch>\r\n      </Container>\r\n    </Suspense>\r\n  );\r\n};\r\nexport default withRouter(AppRoute);\r\n","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\NotFound.js",["237","238"],"import React, { Component } from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"\">\r\n          Hello Login\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default NotFound;","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\ForgotPassword.js",["239","240","241","242","243","244","245"],"import React, { Component} from \"react\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\nimport \"./login.css\";\r\nimport AuthServices from \"../../../services/authService\";\r\nimport loginHelper from \"../../../helper/loginHelper\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          email:\"\",\r\n          password:\"\",\r\n          loader:false,\r\n          error:false,\r\n          errorMessage:\"\",\r\n          loadingstatus:false\r\n        }\r\n        \r\n\r\n      }\r\n    /**\r\n    * @inputChangeHandller \r\n    * getting input field values\r\n    */\r\n    inputChangeHandller = (event) => {\r\n       this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    /**\r\n    * @checkBackgroundFetching \r\n    * Check  Wether Background Fetching is  done or not\r\n    */\r\n    checkBackgroundFetching() {\r\n            // setInterval(() => {\r\n            //     let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n            //     console.log(\"This check ++++++++++\",inBackgroundFetching);\r\n            //     if(inBackgroundFetching !== \"true\"){\r\n            //         console.log(\"This check 111++++++++++\",inBackgroundFetching);\r\n            //         this.props.history.push('/dashboard');       \r\n                               \r\n            //     }\r\n            // },2000);\r\n        }\r\n    /**\r\n    * @handleLoginFormValidation \r\n    * email and password field blank validation\r\n    */\r\n       handleForgotPasswordFormValidation() {\r\n        let fields = {\r\n        email: this.state.email,\r\n        };\r\n        \r\n        let formIsValid = true;\r\n        let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let checkResult = emailRegex.test(String(this.state.email).toLowerCase());\r\n        if (!fields[\"email\"]) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Email Is Required\"});\r\n        return formIsValid;\r\n        } else if (checkResult === false) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Please enter a proper email\"});\r\n        return formIsValid;\r\n        }\r\n        else{\r\n            formIsValid = true;\r\n            return formIsValid;\r\n        }\r\n        \r\n        return formIsValid;\r\n    }\r\n     /**\r\n    * @loginHandler \r\n    * in this function we are checking the email id, password\r\n    * and if the details are correct then login them and also take care about the remember password one\r\n    */\r\n        forgotPasswordHandler = async (event) => {\r\n        event.preventDefault();\r\n        event.preventDefault();\r\n        console.log(this.state.email);\r\n        let payload = {\r\n        email: this.state.email\r\n        }\r\n        if (this.handleForgotPasswordFormValidation()) {\r\n            this.setState({ error:false});\r\n            this.setState({errorMessage:\"\"});\r\n            let payload  ={\r\n                extId: kyubiExtensionId,\r\n                email: this.state.email\r\n            }\r\n            await AuthServices.forgotPassword(payload).then(async result=>{\r\n                console.log(\"This I gggggggg\",result);\r\n                localStorage.setItem('token', result.data.token);\r\n                localStorage.setItem('inBackgroundFetching', true);\r\n                if(result.data.code === 1){\r\n\r\n                    this.setState({ loader: false });\r\n                    this.setState({successMessage:result.data.message});\r\n                    this.setState({ success:true});\r\n                    this.setState({ error:false});\r\n                    \r\n                }else{\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n                this.setState({ success:false});\r\n                }\r\n                \r\n                //this.checkBackgroundFetching();\r\n                 //console.log(LC);\r\n                 \r\n                //history.push(\"/dashboard\");\r\n            }).catch(error=>{\r\n                console.log(error);\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n            });\r\n            \r\n\r\n\r\n        }else{\r\n            this.setState({ error:true});\r\n\r\n        }\r\n        //this.setState({ loader: false });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loader: true });\r\n        let token=localStorage.getItem('token');\r\n        let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n        if(token){\r\n            if(inBackgroundFetching !== \"true\"){\r\n                this.props.history.push('/dashboard');    \r\n            }else{\r\n                this.setState({ loader: false });\r\n            }\r\n        }else{\r\n            this.setState({ loader: false });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n        <div>\r\n        {this.state.loader && (   \r\n        <div className=\"overlay\">\r\n            <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n        </div>\r\n        )}\r\n        \r\n        \r\n        <div className=\"login-html\">\r\n            <p className=\"login-box-msg\">Forgot Password</p>\r\n            <form>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                    className=\"form-control\" \r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    onChange={this.inputChangeHandller}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                            <span className=\"fas fa-envelope\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row\"> \r\n                {this.state.error && ( \r\n                <p class=\"text-danger\">{this.state.errorMessage}</p> \r\n                )}\r\n                {this.state.success && ( \r\n                <p class=\"text-success\">{this.state.successMessage}</p> \r\n                )}             \r\n                <div class=\"col-12\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary btn-block\"\r\n                    onClick={this.forgotPasswordHandler}\r\n                    >Submit</button>\r\n                </div>\r\n                <NavLink  to=\"/\">\r\n                    <p>Login</p>\r\n                </NavLink>\r\n\r\n                   \r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default ForgotPassword;","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\Login.js",["246","247","248","249","250","251","252"],"import React, { Component} from \"react\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\nimport \"./login.css\";\r\nimport AuthServices from \"../../../services/authService\";\r\nimport loginHelper from \"../../../helper/loginHelper\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          email:\"\",\r\n          password:\"\",\r\n          loader:false,\r\n          error:false,\r\n          errorMessage:\"\",\r\n          loadingstatus:false\r\n        }\r\n        \r\n\r\n      }\r\n    /**\r\n    * @inputChangeHandller \r\n    * getting input field values\r\n    */\r\n    inputChangeHandller = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    /**\r\n    * @checkBackgroundFetching \r\n    * Check  Wether Background Fetching is  done or not\r\n    */\r\n    checkBackgroundFetching() {\r\n            // setInterval(() => {\r\n            //     let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n            //     console.log(\"This check ++++++++++\",inBackgroundFetching);\r\n            //     if(inBackgroundFetching !== \"true\"){\r\n            //         console.log(\"This check 111++++++++++\",inBackgroundFetching);\r\n            //         this.props.history.push('/dashboard');       \r\n                               \r\n            //     }\r\n            // },2000);\r\n        }\r\n    /**\r\n    * @handleLoginFormValidation \r\n    * email and password field blank validation\r\n    */\r\n    handleLoginFormValidation() {\r\n        let fields = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        };\r\n        \r\n        let formIsValid = true;\r\n        let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let checkResult = emailRegex.test(String(this.state.email).toLowerCase());\r\n        if (!fields[\"email\"]) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Email Is Required\"});\r\n        return formIsValid;\r\n        } else if (checkResult === false) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Please enter a proper email\"});\r\n        return formIsValid;\r\n        }\r\n        else if (!fields[\"password\"]) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Password Is Required\"});\r\n        return formIsValid;\r\n        }else{\r\n            formIsValid = true;\r\n            return formIsValid;\r\n        }\r\n        \r\n        return formIsValid;\r\n    }\r\n     /**\r\n    * @loginHandler \r\n    * in this function we are checking the email id, password\r\n    * and if the details are correct then login them and also take care about the remember password one\r\n    */\r\n    loginHandler = async (event) => {\r\n        event.preventDefault();\r\n        event.preventDefault();\r\n        this.setState({ loader: true });\r\n        let payload = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        }\r\n        if (this.handleLoginFormValidation()) {\r\n            this.setState({ error:false});\r\n            this.setState({errorMessage:\"\"});\r\n            let payload  ={\r\n                extensionId: kyubiExtensionId,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }\r\n            await AuthServices.login(payload).then(async result=>{\r\n                console.log(\"This I gggggggg\",result);\r\n                localStorage.setItem('token', result.data.token);\r\n                localStorage.setItem('inBackgroundFetching', true);\r\n                if(result.data.code === 1){\r\n                    let LC=loginHelper.login();\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/dashboard');\r\n                        console.log(\"sorry\");\r\n                    }, 3000);\r\n                }else{\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n                }\r\n                \r\n                //this.checkBackgroundFetching();\r\n                 //console.log(LC);\r\n                 \r\n                //history.push(\"/dashboard\");\r\n            }).catch(error=>{\r\n                console.log(error);\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n            });\r\n            \r\n\r\n\r\n        }else{\r\n            this.setState({ error:true});\r\n\r\n        }\r\n        //this.setState({ loader: false });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loader: true });\r\n        let token=localStorage.getItem('token');\r\n        let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n        if(token){\r\n            if(inBackgroundFetching !== \"true\"){\r\n                this.props.history.push('/dashboard');    \r\n            }else{\r\n                this.setState({ loader: false });\r\n            }\r\n        }else{\r\n            this.setState({ loader: false });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            \r\n        <div>\r\n        {this.state.loader && (   \r\n        <div className=\"overlay\">\r\n            <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n        </div>\r\n        )}\r\n        \r\n        \r\n        <div className=\"login-html\">\r\n            <p className=\"login-box-msg\">Sign In</p>\r\n            <form>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                    className=\"form-control\" \r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    onChange={this.inputChangeHandller}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                            <span className=\"fas fa-envelope\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"input-group mb-3\">\r\n                    <input \r\n                    type=\"password\" \r\n                    class=\"form-control\"\r\n                    placeholder=\"**********\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.inputChangeHandller}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                            <span className=\"fas fa-lock\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"> \r\n                {this.state.error && ( \r\n                <p class=\"text-danger\">{this.state.errorMessage}</p> \r\n                )}             \r\n                    <div class=\"col-12\">\r\n                        <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-primary btn-block\"\r\n                        onClick={this.loginHandler}\r\n                        >Sign In</button>\r\n                    </div>\r\n\r\n                    <NavLink  to=\"/forgotPassword\">\r\n                    <p>\r\n                        Forgot Password ?\r\n                    </p>\r\n                    </NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","C:\\Mefnevan\\front-end\\src\\components\\modules\\Auth\\logout.js",["253","254","255"],"import React, { Component} from \"react\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\nimport \"./login.css\";\r\n\r\nclass logout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          \r\n        }\r\n        \r\n\r\n      }\r\n      componentDidMount(){\r\n        \r\n        localStorage.removeItem(\"fb_id\")\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"keywordsTally\")\r\n        localStorage.removeItem('inBackgroundFetching');\r\n        localStorage.removeItem('fb_image');\r\n        localStorage.removeItem('fb_logged_id');\r\n        localStorage.removeItem('fb_name');\r\n        localStorage.removeItem('fb_username');\r\n        localStorage.removeItem(\"autoresponder\")\r\n        localStorage.removeItem(\"kyubi_user_token\")\r\n        localStorage.removeItem(\"user_id\")\r\n        localStorage.removeItem(\"default_message_text\")\r\n        localStorage.removeItem(\"fb_username\")\r\n        localStorage.removeItem(\"default_time_delay\")\r\n        localStorage.removeItem(\"default_message\")\r\n        localStorage.removeItem(\"individualThreadList\")\r\n        localStorage.removeItem('fbthread');\r\n        localStorage.removeItem('fbmunread');\r\n        localStorage.removeItem('fbprofile');\r\n        setTimeout(() => {\r\n            this.props.history.push('/');\r\n          }, 3000);\r\n      }\r\n    render() {\r\n        return (\r\n\r\n          <div className=\"wrapper\">\r\n            \r\n            \r\n\r\n            <div className=\"content-wrapper\">\r\n              <section className=\"content-header\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row mb-12\">\r\n                    <div className=\"col-sm-6\">\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                    <div class=\"alert alert-danger alert-dismissible\">\r\n                  \r\n                  <h5><i class=\"icon fas fa-ban\"></i> Alert!</h5>\r\n                  Thanks For Being With Us We are Loging You Out\r\n                </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default logout;","C:\\Mefnevan\\front-end\\src\\components\\modules\\Main\\Dashboard.js",["256","257","258","259","260","261","262","263","264"],"import React, { Component } from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport  {OpenFacebookInTab,CheckUserInfoFromFaccebook,OpenFacebookProfileInTab} from  '../../../helper/helper'\r\nimport Sidebar from \"../Common/sidebar\"\r\nimport settingService from \"../../../services/setting\"\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      fb_image:\"\",\r\n      fb_name:\"\",\r\n      fb_username:\"\",\r\n      fb_id:\"\",\r\n      fb_logged_id:\"\",\r\n      autoresponder:\"0\",\r\n      shownavbar:false,\r\n      loader:true\r\n    }\r\n  }\r\n  ShowMenu = (event) => {\r\n    event.preventDefault();\r\n    \r\n    this.setState({\r\n      shownavbar:true\r\n    })\r\n  }\r\n  fbHandler = async (event) => {\r\n    event.preventDefault();\r\n    let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n    console.log(\"You Are Loged in\",fb_logged_id);\r\n    if(fb_logged_id === \"false\"){\r\n      OpenFacebookInTab();\r\n    }else{\r\n      OpenFacebookProfileInTab();\r\n    }\r\n  }\r\n  autoresponderHandler  = async (event) =>{\r\n    let user_id=localStorage.getItem('user_id');\r\n    let autoresponder = 0;\r\n    let payload ={\r\n      user_id:user_id,\r\n      autoresponder:autoresponder\r\n    }\r\n    await settingService.updateAutoresponderSetting(payload).then(async result=>{\r\n      this.setState({\r\n        loader:true\r\n      })\r\n      console.log(result);\r\n      if(result.data.code==1){\r\n        let responsenewvalue =result.data;\r\n        console.log( responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n        localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('fb_id', responsenewvalue.payload.UserInfo.facebook_id);\r\n        localStorage.setItem('fb_username', responsenewvalue.payload.UserInfo.facebook_name);\r\n        localStorage.setItem('fb_name', responsenewvalue.payload.UserInfo.facebook_profile_name);\r\n        localStorage.setItem('fb_image', responsenewvalue.payload.UserInfo.facebook_image);\r\n        localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n        localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n        localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n        localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n        localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n        let fb_image=localStorage.getItem('fb_image');\r\n        let fb_username=localStorage.getItem('fb_username');\r\n        let fb_name=localStorage.getItem('fb_name');\r\n        let fb_id=localStorage.getItem('fb_id');\r\n        let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",fb_logged_id);\r\n        this.setState({\r\n        fb_image:fb_image,\r\n        fb_username:fb_username,\r\n        fb_name:fb_name,\r\n        fb_id:fb_id,\r\n        fb_logged_id:fb_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    //CheckUserInfoFromFaccebook();\r\n  }\r\n  refreshHandler  = async (event) =>  {\r\n    event.preventDefault();\r\n    // this.setState({\r\n    //   loader:true\r\n    // })\r\n    CheckUserInfoFromFaccebook();\r\n    // setTimeout(() => {\r\n\r\n    //   let fb_image=localStorage.getItem('fb_image');\r\n    //   let fb_username=localStorage.getItem('fb_username');\r\n    //   let fb_name=localStorage.getItem('fb_name');\r\n    //   let fb_id=localStorage.getItem('fb_id');\r\n    //   let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n    //   let autoresponder=localStorage.getItem('autoresponder');\r\n    //   this.setState({\r\n    //     fb_image:fb_image,\r\n    //     fb_username:fb_username,\r\n    //     fb_name:fb_name,\r\n    //     fb_id:fb_id,\r\n    //     fb_logged_id:fb_logged_id,\r\n    //     autoresponder:autoresponder,\r\n    //     loader:false\r\n    //   })\r\n\r\n    // }, 4000);\r\n  }\r\n  componentDidMount(){\r\n    setTimeout(async () => {\r\n      \r\n      let user_id=localStorage.getItem('user_id');\r\n      let payload   ={user_id:user_id }\r\n      await settingService.getUserDetails(payload).then(result  =>{\r\n        \r\n      if(result.data.code==1){\r\n        let responsenewvalue =result.data;\r\n        console.log( responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n        localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('fb_id', responsenewvalue.payload.UserInfo.facebook_id);\r\n        localStorage.setItem('fb_username', responsenewvalue.payload.UserInfo.facebook_name);\r\n        localStorage.setItem('fb_name', responsenewvalue.payload.UserInfo.facebook_profile_name);\r\n        localStorage.setItem('fb_image', responsenewvalue.payload.UserInfo.facebook_image);\r\n        localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n        localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n        localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n        localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n        localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n        let fb_image=localStorage.getItem('fb_image');\r\n        let fb_username=localStorage.getItem('fb_username');\r\n        let fb_name=localStorage.getItem('fb_name');\r\n        let fb_id=localStorage.getItem('fb_id');\r\n        let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",fb_logged_id);\r\n        this.setState({\r\n        fb_image:fb_image,\r\n        fb_username:fb_username,\r\n        fb_name:fb_name,\r\n        fb_id:fb_id,\r\n        fb_logged_id:fb_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n\r\n      }\r\n      }).catch(error=>{\r\n\r\n        let fb_image=localStorage.getItem('fb_image');\r\n        let fb_username=localStorage.getItem('fb_username');\r\n        let fb_name=localStorage.getItem('fb_name');\r\n        let fb_id=localStorage.getItem('fb_id');\r\n        let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",fb_logged_id);\r\n        this.setState({\r\n        fb_image:fb_image,\r\n        fb_username:fb_username,\r\n        fb_name:fb_name,\r\n        fb_id:fb_id,\r\n        fb_logged_id:fb_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n\r\n      })\r\n      \r\n\r\n    }, 3000);\r\n    \r\n  }\r\n    render() {\r\n        return (\r\n\r\n          \r\n          <div className=\"wrapper\">\r\n            {this.state.loader ?   \r\n                <div className=\"overlay\">\r\n                <i className=\"fas fa-2x fa-sync fa-spin\"> </i>\r\n                \r\n                \r\n                <p className=\"text-success lodclass\">Loading ........</p>\r\n                </div>\r\n            :\r\n            <div>\r\n                <Sidebar  selectedtab=\"dashboard\"></Sidebar>\r\n                <div className=\"content-wrapper\">\r\n                  <section className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                      <div className=\"row mb-12\">\r\n                        <div className=\"col-sm-6\">\r\n                          <h1>Dashboard</h1>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                  <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"card card-primary card-outline\">\r\n                            <div className=\"card-body box-profile\">\r\n                              <div className=\"text-center\">\r\n                                <img className=\"profile-user-img img-fluid img-circle\" src={this.state.fb_image} alt=\"User profile picture\" />\r\n                              </div>\r\n                              <h3 className=\"profile-username text-center\">{this.state.fb_name}</h3>\r\n                              <p className=\"text-muted text-center\">{this.state.fb_username}</p>\r\n                              <ul className=\"list-group list-group-unbordered mb-3\">\r\n                              {this.state.fb_logged_id===\"true\" ? \r\n                                \"\"\r\n                                :\r\n                                <li className=\"list-group-item\">\r\n                                <div className=\"card-body\">\r\n                                  <div className=\"callout callout-danger\">\r\n                                      <div className=\"ribbon-wrapper\">\r\n                                        <div className=\"ribbon bg-danger\">\r\n                                          Warning\r\n                                        </div>\r\n                                      </div>\r\n                                      <h5>Warning!</h5>\r\n                                      <p>Please Log-in to your Facebook   profile and click the refresh button below to proceed further.</p>\r\n                                  </div>\r\n                                </div>\r\n                                </li>\r\n                                \r\n                              }\r\n                              {this.state.autoresponder==\"1\" ?\r\n                              <li className=\"list-group-item\">\r\n                              <a onClick={this.autoresponderHandler} className=\"btn btn-warning btn-block\"><i class=\"fas fa-pause\"></i> Pause Autoresponder</a>\r\n                              </li>\r\n                              : \r\n                              \"\"\r\n                              }\r\n                                <li className=\"list-group-item\">\r\n                                <a onClick={this.refreshHandler} className=\"btn btn-warning btn-block\"><i class=\"fas fa-sync\"></i> Refresh</a>\r\n                                </li>\r\n\r\n                                \r\n                                \r\n                              </ul>\r\n                              <a onClick={this.fbHandler} className=\"btn btn-primary btn-block\"><i class=\"fab fa-facebook-square\"></i><b>\r\n                              {this.state.fb_logged_id===\"true\" ? \r\n                                \" Your Profile\"\r\n                                :\r\n                                \" Facebook\"\r\n                              }\r\n                                \r\n                                \r\n                                </b></a>\r\n                              \r\n                            </div>           \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                </div>        \r\n            </div>  \r\n          }\r\n\r\n            \r\n            \r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default Dashboard;","C:\\Mefnevan\\front-end\\src\\components\\modules\\Setting\\setting.js",["265","266","267","268"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../Auth/login.css\";\r\nimport \"./setting.css\";\r\nimport SettingServices from \"../../../services/setting\";\r\nimport Sidebar from \"../Common/sidebar\";\r\nimport  {CheckUserInfoFromFaccebook} from  '../../../helper/helper'\r\nclass setting extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        defaultmessage:0,\r\n        default_time_delay:0,\r\n        default_message_text:\"\",\r\n        autoresponder: 0,\r\n        loader:true\r\n      }\r\n    }\r\n    /**\r\n    * @inputChangeHandller \r\n    * getting input field values\r\n    */\r\n   inputChangeHandller = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    \r\n   autoSetting = () => {\r\n        console.log(\"hiyy\",this.state.defaultmessage )\r\n        if(this.state.defaultmessage === 0){\r\n            this.setState({defaultmessage:1})\r\n        }else{\r\n            this.setState({defaultmessage:0})\r\n        }\r\n    }\r\n    autoRespoSetting = () => {\r\n        console.log(\"hiyy\",this.state.autoresponder )\r\n        if(this.state.autoresponder === 0){\r\n            this.setState({autoresponder:1})\r\n        }else{\r\n            this.setState({autoresponder:0})\r\n        }\r\n    }\r\n    /**\r\n    * @handleLoginFormValidation \r\n    * email and password field blank validation\r\n    */\r\n    handleFormValidation() {\r\n        let payload = {\r\n            defaultmessage: this.state.defaultmessage,\r\n            default_time_delay: this.state.default_time_delay,\r\n            default_message_text: this.state.default_message_text,\r\n            autoresponder:this.state.autoresponder,\r\n            kyubi_user_token:localStorage.getItem(\"kyubi_user_token\")\r\n        }\r\n        let formIsValid = true;\r\n        if(payload[\"defaultmessage\"] ===  1){\r\n            console.log(\"Ya Ya Ya Ya\");\r\n            if(isNaN(payload[\"default_time_delay\"])){\r\n             console.log(\"Is not a number\");\r\n             return false;\r\n            }else if(payload[\"default_message_text\"]){\r\n                console.log(\"Is have no test\");\r\n             return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    submitHandler = async (event) => {\r\n        this.setState({loader:true});\r\n        event.preventDefault();        \r\n        let payload = {\r\n            defaultmessage: this.state.defaultmessage,\r\n            default_time_delay: this.state.default_time_delay,\r\n            default_message_text: this.state.default_message_text,\r\n            autoresponder:this.state.autoresponder,\r\n            kyubi_user_token:localStorage.getItem(\"kyubi_user_token\")\r\n        }\r\n        console.log(\"This are payload\",payload);\r\n        await SettingServices.setSetting(payload).then(async result=>{\r\n            console.log(\"Setttttttttttttttttttttt\",result);\r\n            if(result.data.code==1){\r\n                let responsenewvalue =result.data;\r\n                console.log(\"Autoresponder  is ------------\",responsenewvalue.payload.UserSettings.autoresponder);\r\n                localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n                localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n                localStorage.setItem('fb_id', responsenewvalue.payload.UserInfo.facebook_id);\r\n                localStorage.setItem('fb_username', responsenewvalue.payload.UserInfo.facebook_name);\r\n                localStorage.setItem('fb_name', responsenewvalue.payload.UserInfo.facebook_profile_name);\r\n                localStorage.setItem('fb_image', responsenewvalue.payload.UserInfo.facebook_image);\r\n                localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n                localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n                localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n                localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n                localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n                this.setState({loader:false});\r\n                if(responsenewvalue.payload.UserSettings.autoresponder === 1){\r\n                    CheckUserInfoFromFaccebook();\r\n                }\r\n                \r\n                \r\n              }else{\r\n                this.setState({loader:false});  \r\n              }\r\n            \r\n            \r\n        }).catch(error=>{\r\n            console.log(error);\r\n            this.setState({loader:false});\r\n        });\r\n        \r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        let payload = {\r\n\r\n            kyubi_user_token:localStorage.getItem(\"kyubi_user_token\")\r\n        }\r\n        SettingServices.getSetting(payload).then(async result=>{\r\n            console.log(result);\r\n            if(result.data.code===1){\r\n                this.setState({\r\n                    defaultmessage:result.data.payload.default_message,\r\n                    default_time_delay:result.data.payload.default_time_delay,\r\n                    default_message_text:result.data.payload.default_message_text,\r\n                    autoresponder: result.data.payload.autoresponder,\r\n                    loader:false\r\n                })\r\n            }else{\r\n                this.setState({loader:false});\r\n            }\r\n            //console.log(result);\r\n        }).catch(error=>{\r\n            //console.log(error);\r\n            this.setState({loader:false});\r\n        }); \r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                {this.state.loader ?   \r\n                    <div className=\"overlay\">\r\n                    <i className=\"fas fa-2x fa-sync fa-spin\"> </i>\r\n                    \r\n                    \r\n                    <p className=\"text-success lodclass\">Loading ........</p>\r\n                    </div>\r\n                :\r\n                    <div>                \r\n                        <Sidebar  selectedtab=\"setting\"></Sidebar>\r\n                        <div className=\"content-wrapper\">\r\n                        <section className=\"content-header\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row mb-12\">\r\n                                    <div className=\"col-sm-6\">\r\n                                    <h1>Settings</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"content\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                    \r\n                                    <div className=\"card card-primary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"card-title\">Settings\r\n                                            \r\n                                            </h3>\r\n                                        </div>\r\n                                        <form>\r\n                                        <div className=\"card-body\">\r\n                                            \r\n\r\n                                            <div className=\"form-group clearfix\">\r\n                                                <div className=\"icheck-success d-inline\">\r\n                                                {this.state.defaultmessage ?  \r\n                                                    <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"defaultmessage\" onChange={this.autoSetting} checked/>\r\n                                                    :\r\n                                                    <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"defaultmessage\" onChange={this.autoSetting} />\r\n                                                }  \r\n                                                <label for=\"checkboxPrimary3\">\r\n                                                    Activate Default Message\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label for=\"exampleInputEmail1\">Default  Message</label>\r\n                                                <textarea name=\"default_message_text\" value={this.state.default_message_text} onChange={this.inputChangeHandller} className=\"form-control\" rows=\"3\" name=\"default_message_text\" placeholder=\"Enter ...\"></textarea>\r\n                                            </div>\r\n                                            <div className=\"bootstrap-timepicker\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Time Interval For Default Message:</label>\r\n                                                        <div className=\"input-group date\" id=\"timepicker\" data-target-input=\"nearest\">\r\n                                                            <input type=\"number\" onChange={this.inputChangeHandller} className=\"form-control datetimepicker-input\" name=\"default_time_delay\"  value={this.state.default_time_delay} data-target=\"#timepicker\"/>\r\n                                                            <div className=\"input-group-append\" data-target=\"#timepicker\" data-toggle=\"datetimepicker\">\r\n                                                                <div className=\"input-group-text\">\r\n                                                                    <i className=\"far fa-clock\"></i>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group clearfix\">\r\n                                            <div className=\"icheck-success d-inline\">\r\n                                            {this.state.autoresponder ?  \r\n                                                <input type=\"checkbox\" id=\"checkboxPrimary2\" name=\"autoresponder\" onChange={this.autoRespoSetting} checked/>\r\n                                                :\r\n                                                <input type=\"checkbox\" id=\"checkboxPrimary2\" name=\"autoresponder\" onChange={this.autoRespoSetting} />\r\n                                            }  \r\n                                            <label for=\"checkboxPrimary2\">\r\n                                                Activate Auto-Responder\r\n                                            </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>           \r\n                                        <div className=\"card-footer\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary\"  onClick={this.submitHandler} >Submit</button>\r\n                                        </div>\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default setting;","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponder.js",["269"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Sidebar from \"../Common/sidebar\";\r\nimport AutoResponderService from  \"../../../services/autoResponderServices\";\r\nimport settingService   from  \"../../../services/setting\";\r\nclass autoResponnder extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        autoresponderList :[],\r\n        loader:true\r\n      }\r\n    }\r\n    componentDidMount(){\r\n        let Token=localStorage.getItem(\"kyubi_user_token\");\r\n        let payload ={\r\n            user_id:Token\r\n        }\r\n        AutoResponderService.listAutoResponder(payload).then(async response =>{\r\n          \r\n            if(response.data.payload.autokey)\r\n            this.setState({autoresponderList:response.data.payload.autokey})\r\n            \r\n\r\n            let user_id=localStorage.getItem('user_id');\r\n            let payload   ={user_id:user_id }\r\n            await settingService.getUserDetails(payload).then(result  =>{\r\n\r\n            if(result.data.code==1){\r\n            let responsenewvalue =result.data;\r\n            console.log( responsenewvalue.payload.UserInfo.user_id);\r\n            localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n            localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n            localStorage.setItem('fb_id', responsenewvalue.payload.UserInfo.facebook_id);\r\n            localStorage.setItem('fb_username', responsenewvalue.payload.UserInfo.facebook_name);\r\n            localStorage.setItem('fb_name', responsenewvalue.payload.UserInfo.facebook_profile_name);\r\n            localStorage.setItem('fb_image', responsenewvalue.payload.UserInfo.facebook_image);\r\n            localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n            localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n            localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n            localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n            localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n\r\n\r\n            }\r\n            }).catch(error=>{\r\n\r\n\r\n            })\r\n            this.setState({loader:false});\r\n          }).catch(error=>{\r\n            this.setState({loader:false});\r\n          });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                {this.state.loader && (   \r\n                <div className=\"overlay\">\r\n                <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n                </div>\r\n                )}\r\n                <Sidebar  selectedtab=\"setting\"></Sidebar>\r\n                <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-12\">\r\n                            <div className=\"col-sm-6\">\r\n                            <h1>Auto-Responder</h1>\r\n                            \r\n                            <NavLink  to=\"/autorespondercreate\"  class=\"btn btn-app\">\r\n                                <i class=\"fas fa-plus-square\"></i> Create New Auto-Responder\r\n                            </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row overflow-auto\">\r\n                            <div className=\"col-md-12\">\r\n                            {Object.keys(this.state.autoresponderList).length > 0 ?\r\n                            (this.state.autoresponderList.map((data, i) => {\r\n                                let editlink= \"/autoresponderedit/\"+data._id;\r\n                            return(\r\n                                \r\n                            <div className={data.status ===  1 ? \"card card-success shadow-none\" : \"card card-danger shadow-none\" }>\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\">{data.auto_responder_name}</h3>\r\n                                    <div className=\"card-tools\">\r\n                                        <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\r\n                                        <NavLink  to={editlink}><i className=\"far fa-edit\"></i></NavLink>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\" >\r\n                                    <div className={data.status ===  1 ? \"callout callout-success\" : \"callout callout-danger\" }>\r\n                                        <h6>Response Message :</h6>\r\n                                        <p>{data.message}</p>\r\n                                    </div>\r\n                                    <div className={data.status ===  1 ? \"callout callout-success\" : \"callout callout-danger\" }>\r\n                                        <h6>Keywords :</h6>\r\n                                        <p>\r\n                                        {data.autoresponderkeywords.map((result, i) => {\r\n                                        return (\r\n                                            <span class=\"badge badge-info\">{result.keywords}</span>\r\n                                        )\r\n                                        })\r\n                                        }\r\n                                        \r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            )\r\n                            }))\r\n                            :\r\n                            (this.state.loader ? \" \": \r\n                            <div className=\"card card-danger shadow-none\">\r\n                            <div className=\"card-header\">\r\n                                <h3 className=\"card-title\">Oops !</h3>\r\n                                <div className=\"card-tools\">\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\" >\r\n                                <div className=\"callout callout-danger\">\r\n                                    <h5>Sorry There Is No Auto-Responder</h5>\r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            </div> \r\n                                )\r\n                              \r\n                            }       \r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default autoResponnder;","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderCreate.js",["270","271"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AutoResponderService from  \"../../../services/autoResponderServices\"\r\nimport Sidebar from \"../Common/sidebar\"\r\nclass autoResponderCreate extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        auto_responder_name:\"\",\r\n        auto_responder_keywords:\"\",\r\n        auto_responder_message:\"\",\r\n        auto_responder_status:1,\r\n        loader:false\r\n      }\r\n    }\r\n    /**\r\n        * @inputChangeHandller \r\n        * getting input field values\r\n    */\r\n    inputChangeHandller = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    autoSetting = () => {\r\n        console.log(\"hiyy\",this.state.auto_responder_status )\r\n        if(this.state.auto_responder_status === 0){\r\n            this.setState({auto_responder_status:1})\r\n        }else{\r\n            this.setState({auto_responder_status:0})\r\n        }\r\n    }\r\n    createAutoResponderGroupHandler =  (event) =>{\r\n        this.setState({loader:true});\r\n        event.preventDefault();\r\n        let Token=localStorage.getItem(\"kyubi_user_token\");\r\n        let payload = {\r\n            user_id:Token,\r\n            auto_responder_name:this.state.auto_responder_name,\r\n            auto_responder_keywords:this.state.auto_responder_keywords,\r\n            auto_responder_message:this.state.auto_responder_message,\r\n            auto_responder_status:this.state.auto_responder_status\r\n        }\r\n        \r\n        AutoResponderService.createAutoResponder(payload).then(response =>{\r\n          \r\n          this.setState({loader:false});\r\n          this.props.history.push('/autoresponder');\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                {this.state.loader && (   \r\n                    <div className=\"overlay\">\r\n                    <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n                    </div>\r\n                )}\r\n                <Sidebar  selectedtab=\"setting\"></Sidebar>\r\n                <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-12\">\r\n                            <div className=\"col-sm-6\">\r\n                            <h1>Auto-Responder</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                            \r\n                            <div className=\"card card-primary\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\"> Create Auto-Responder</h3>\r\n                                </div>\r\n                                <form>\r\n                                <div className=\"card-body\">\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Name</label>\r\n                                        <input type=\"text\"\r\n                                            name=\"auto_responder_name\" \r\n                                            className=\"form-control\" \r\n                                            id=\"exampleInputEmail1\" \r\n                                            placeholder=\"Auto-Responder Name\" \r\n                                            value={this.state.auto_responder_name}\r\n                                            onChange={this.inputChangeHandller}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Keywords</label>\r\n                                        <textarea \r\n                                        name=\"auto_responder_keywords\" \r\n                                        className=\"form-control\" \r\n                                        rows=\"3\"\r\n                                        placeholder=\"Auto-Responder Keywords  Seperated with coma Like hello,Hi,How are you\"\r\n                                        value={this.state.auto_responder_keywords}\r\n                                        onChange={this.inputChangeHandller}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Response Message</label>\r\n                                        <textarea \r\n                                        name=\"auto_responder_message\" \r\n                                        value=\"\"  \r\n                                        className=\"form-control\" \r\n                                        rows=\"3\"  \r\n                                        placeholder=\"Please enter the response message....\"\r\n                                        value={this.state.auto_responder_message}\r\n                                        onChange={this.inputChangeHandller}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group clearfix\">\r\n                                        <div className=\"icheck-success d-inline\">\r\n                                        {this.state.auto_responder_status ?\r\n                                        <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"auto_responder_status\" onChange={this.autoSetting} checked/>\r\n                                        :\r\n                                        <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"auto_responder_status\" onChange={this.autoSetting}/>\r\n                                        }\r\n                                        <label for=\"checkboxPrimary3\">\r\n                                            Activate Auto-Responder\r\n                                        </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>           \r\n                                <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.createAutoResponderGroupHandler} >Submit</button>\r\n                                </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default autoResponderCreate;","C:\\Mefnevan\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderEdit.js",["272","273"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AutoResponderService from  \"../../../services/autoResponderServices\"\r\nimport Sidebar from \"../Common/sidebar\"\r\nclass autoResponderEdit extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        auto_responder_id:\"\",\r\n        auto_responder_name:\"\",\r\n        auto_responder_keywords:\"\",\r\n        auto_responder_message:\"\",\r\n        auto_responder_status:0,\r\n        loader:false\r\n      }\r\n    }\r\n    /**\r\n        * @inputChangeHandller \r\n        * getting input field values\r\n    */\r\n    inputChangeHandller = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    autoSetting = () => {\r\n        console.log(\"hiyy\",this.state.auto_responder_status )\r\n        if(this.state.auto_responder_status === 0){\r\n            this.setState({auto_responder_status:1})\r\n        }else{\r\n            this.setState({auto_responder_status:0})\r\n        }\r\n    }\r\n    updateAutoResponderGroupHandler =  (event) =>{\r\n        this.setState({loader:true});\r\n        event.preventDefault();\r\n        let Token=localStorage.getItem(\"kyubi_user_token\");\r\n        let payload = {\r\n            user_id:Token,\r\n            auto_responder_id:this.state.auto_responder_id,\r\n            auto_responder_name:this.state.auto_responder_name,\r\n            auto_responder_keywords:this.state.auto_responder_keywords,\r\n            auto_responder_message:this.state.auto_responder_message,\r\n            auto_responder_status:this.state.auto_responder_status\r\n        }\r\n        \r\n        AutoResponderService.updateAutoResponder(payload).then(response =>{\r\n          \r\n          this.setState({loader:false});\r\n           this.props.history.push('/autoresponder');\r\n        });\r\n      }\r\n      backAutoResponderGroupHandler =  (event) =>{\r\n        \r\n          this.props.history.push('/autoresponder');\r\n       \r\n      }\r\n      componentDidMount(){\r\n        this.setState({loader:true});\r\n        let payload = { Id: this.props.match.params.idfy };\r\n        console.log(payload);\r\n        AutoResponderService.editAutoResponder(payload).then(async response=>{\r\n            console.log(response);\r\n            if(response.data.code === 1){\r\n                let newKey=\"\";\r\n                await response.data.payload[0].autoresponderkeywords.map(async (result, i) => {\r\n                    console.log(result.keywords);\r\n                    if(newKey===\"\"){\r\n                        //console.log(result);\r\n                        newKey=result.keywords\r\n                    }else{\r\n                        newKey=newKey+\",\"+result.keywords;\r\n                        \r\n                    }\r\n                });\r\n                this.setState({\r\n                    auto_responder_id:response.data.payload[0]._id,\r\n                    auto_responder_name:response.data.payload[0].auto_responder_name,\r\n                    auto_responder_message:response.data.payload[0].message,\r\n                    auto_responder_status:response.data.payload[0].status,\r\n                    auto_responder_keywords:newKey,\r\n                    loader:false\r\n                  })\r\n            }\r\n        }).catch(error=>{\r\n\r\n        })\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                {this.state.loader && (   \r\n                    <div className=\"overlay\">\r\n                    <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n                    </div>\r\n                )}\r\n                <Sidebar  selectedtab=\"setting\"></Sidebar>\r\n                <div className=\"content-wrapper\">\r\n                <section className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-12\">\r\n                            <div className=\"col-sm-6\">\r\n                            <h1>Auto-Responder</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                            \r\n                            <div className=\"card card-primary\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\"> Create Auto-Responder</h3>\r\n                                </div>\r\n                                <form>\r\n                                <div className=\"card-body\">\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Name</label>\r\n                                        <input type=\"text\"\r\n                                            name=\"auto_responder_name\" \r\n                                            className=\"form-control\" \r\n                                            id=\"exampleInputEmail1\" \r\n                                            placeholder=\"Auto-Responder Name\" \r\n                                            value={this.state.auto_responder_name}\r\n                                            onChange={this.inputChangeHandller}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Keywords</label>\r\n                                        <textarea \r\n                                        name=\"auto_responder_keywords\" \r\n                                        className=\"form-control\" \r\n                                        rows=\"3\"\r\n                                        placeholder=\"Auto-Responder Keywords  Seperated with coma Like hello,Hi,How are you\"\r\n                                        value={this.state.auto_responder_keywords}\r\n                                        onChange={this.inputChangeHandller}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Auto-Responder Response Message</label>\r\n                                        <textarea \r\n                                        name=\"auto_responder_message\" \r\n                                        value=\"\"  \r\n                                        className=\"form-control\" \r\n                                        rows=\"3\"  \r\n                                        placeholder=\"Please enter the response message....\"\r\n                                        value={this.state.auto_responder_message}\r\n                                        onChange={this.inputChangeHandller}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group clearfix\">\r\n                                        <div className=\"icheck-success d-inline\">\r\n                                        \r\n                                        {this.state.auto_responder_status ?\r\n                                        <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"auto_responder_status\" onChange={this.autoSetting} checked/>\r\n                                        :\r\n                                        <input type=\"checkbox\" id=\"checkboxPrimary3\" name=\"auto_responder_status\" onChange={this.autoSetting}/>\r\n                                        }\r\n                                        <label for=\"checkboxPrimary3\">\r\n                                            Activate Auto-Responder\r\n                                        </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>           \r\n                                <div className=\"card-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.updateAutoResponderGroupHandler} >Update</button>\r\n                                <button type=\"button\" className=\"btn btn-secondary  float-right\"  onClick={this.backAutoResponderGroupHandler} ><i className=\"far fa-arrow-alt-circle-left\"></i> Back</button>\r\n                                </div>\r\n                                </form>\r\n                            </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default autoResponderEdit;","C:\\Mefnevan\\front-end\\src\\config.js",[],"C:\\Mefnevan\\front-end\\src\\services\\setting.js",["274"],"import axios from 'axios';\r\nimport { host,kyubi } from '../config';\r\n\r\nconst settingService = {\r\n    setSetting: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/setting/setsetting',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    getSetting: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/setting/getSetting',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    updateAutoresponderSetting: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/setting/updateautoresponder',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    getUserDetails: function    (payload)   {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/setting/getUserDetails',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport default settingService;","C:\\Mefnevan\\front-end\\src\\helper\\loginHelper.js",[],"C:\\Mefnevan\\front-end\\src\\services\\autoResponderServices.js",["275"],"import axios from 'axios';\r\nimport { host,kyubi } from '../config';\r\n\r\nconst autoResponderServices = {\r\n    createAutoResponder: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/autoresponder/create',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    listAutoResponder: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/autoresponder/list',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    editAutoResponder: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/autoresponder/edit',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    updateAutoResponder: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: host + '/api/autoresponder/update',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n}\r\nexport default autoResponderServices;","C:\\Mefnevan\\front-end\\src\\services\\authService.js",["276"],"import axios from 'axios';\r\nimport { host,kyubi } from '../config';\r\n\r\nconst authService = {\r\n    login: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            let options = {\r\n                method: 'POST',\r\n                url: kyubi + '/login',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: payload\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"In Error\");\r\n                    reject(err)\r\n                })\r\n        })\r\n    },\r\n    forgotPassword: function (payload) {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(payload);\r\n            let options = {\r\n                method: 'POST',\r\n                mode: \"cors\", // no-cors, cors, *same-origin\r\n                url: kyubi + '/generate-password-token',\r\n                headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n                data: JSON.stringify(payload)\r\n            }\r\n            axios(options)\r\n                .then(res => {\r\n                    console.log(\"In Success\");\r\n                    resolve(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Error In Forgot Password\");\r\n                    reject(err)\r\n                })\r\n        })\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default authService","C:\\Mefnevan\\front-end\\src\\helper\\helper.js",[],"C:\\Mefnevan\\front-end\\src\\components\\modules\\Common\\sidebar.js",["277","278","279","280"],"import React, { Component } from \"react\";\r\nimport logo from \"../../../image/Logo_Side.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {Animated} from \"react-animated-css\";\r\nclass sidebar extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        selected:this.props.selectedtab,\r\n        openSidebar:false,\r\n        \r\n      }\r\n    }\r\n    HideMenu = (event) => {\r\n      event.preventDefault();\r\n      //console.log(this.props.shownav);\r\n      this.setState({\r\n        openSidebar:false\r\n      })\r\n    }\r\n    ShowMenu = (event) => {\r\n      event.preventDefault();\r\n      //console.log(this.props.shownav);\r\n      this.setState({\r\n        openSidebar:true\r\n      })\r\n    }\r\n    componentDidMount(){\r\n        //console.log(this.props.shownav);\r\n    }\r\n    render() {\r\n        return (\r\n        <div>\r\n          <nav className=\"main-header navbar navbar-expand  navbar-dark\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" onClick={this.ShowMenu} data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n                    <i className=\"fas fa-bars\"></i>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n          </nav>\r\n        {this.state.openSidebar ?\r\n                      \r\n                      <div className=\"main-sidebar sidebar-light-primary elevation-4 sidebar-no-expand\" id=\"navbarMenu\">\r\n              \r\n                      <a href=\"\" onClick={this.HideMenu} ><div className=\"crossbox\"><i class=\"fas fa-times\"></i></div></a>\r\n                      \r\n                        <NavLink  to=\"/dashboard\" className=\"brand-link\">\r\n                        \r\n                          <img  src={logo} className=\"Brandlogo\"></img>\r\n                        \r\n                        </NavLink>\r\n                        <div className=\"sidebar\">\r\n                          <nav className=\"mt-2\">\r\n                            <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                              <li className=\"nav-item\">\r\n                                  <NavLink  to=\"/dashboard\" className=\"nav-link\">\r\n                                    <i className=\"nav-icon fas fa-tachometer-alt\"></i>\r\n                                    <p>\r\n                                      Dashboard\r\n                                    </p>\r\n                                  </NavLink>\r\n                              </li>\r\n                              <li className=\"nav-item\">\r\n                                  <NavLink  to=\"/setting\" className=\"nav-link\">\r\n                                    <i className=\"nav-icon fas fa-cogs\"></i>\r\n                                    <p>\r\n                                      Setting\r\n                                    </p>\r\n                                  </NavLink>\r\n                              </li> \r\n                              <li className=\"nav-item\">\r\n                                  <NavLink  to=\"/messageGroup\" className=\"nav-link\">\r\n                                    <i className=\"nav-icon fas fa-cogs\"></i>\r\n                                    <p>\r\n                                      Message Group\r\n                                    </p>\r\n                                  </NavLink>\r\n                              </li>  \r\n                              <li className=\"nav-item\">\r\n                                  <NavLink  to=\"/autoresponder\" className=\"nav-link\">\r\n                                    <i className=\"nav-icon fas fa-magic\"></i>\r\n                                    <p>\r\n                                      Auto-Responder\r\n                                    </p>\r\n                                  </NavLink>\r\n                              </li>\r\n                              \r\n                              <li className=\"nav-item\">\r\n                                  <NavLink  to=\"/logout\" className=\"nav-link\">\r\n                                    <i className=\"nav-icon fas fa-sign-out-alt\"></i>\r\n                                    <p>\r\n                                      Logout\r\n                                    </p>\r\n                                  </NavLink>\r\n                              </li>\r\n                            </ul>\r\n                          </nav>\r\n                        </div>\r\n                      </div>\r\n                   \r\n        :\r\n        \"\"\r\n        }\r\n        </div>\r\n          \r\n         \r\n\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default sidebar;","C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroup.js",["281","282","283"],"import React, { Component} from \"react\";\r\nimport MessageGroupService from  \"../../../services/messageGroupService\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport Sidebar from \"../Common/sidebar\";\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass messageGroup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          messageGroupList :[],\r\n          loader:true\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({loader:false});\r\n        if(localStorage.getItem(\"groupitems\"))\r\n        this.setState({messageGroupList:JSON.parse(localStorage.getItem(\"groupitems\"))})\r\n    }\r\n    deleteMessageGroupHandler =  (id,event) =>{\r\n        let payload = {\r\n            message_group_id:id\r\n        }\r\n        if(MessageGroupService.deleteMessageGroup(payload))\r\n        {\r\n            this.setState({loader:false});\r\n            this.props.history.push('/messageGroup');\r\n        }\r\n        \r\n\r\n    }\r\n    render() {\r\n        \r\n        return ( <div className=\"wrapper\">\r\n                         {this.state.loader && (   \r\n                            <div className=\"overlay\">\r\n                            <i className=\"fas fa-2x fa-sync-alt fa-spin\"></i>\r\n                            </div>\r\n                         )}\r\n                         <Sidebar  selectedtab=\"setting\"></Sidebar>\r\n                                <div className=\"content-wrapper\">\r\n                                <section className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-12\">\r\n                                            <div className=\"col-sm-6\">\r\n                                            <h1>Message-Group</h1>\r\n                                            \r\n                                            <NavLink  to=\"/messagegroupcreate\"  class=\"btn btn-app\">\r\n                                                <i class=\"fas fa-plus-square\"></i> Create New Message-Group\r\n                                            </NavLink>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                                <section className=\"content\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row overflow-auto\">\r\n                                                <div className=\"col-md-12\">\r\n                                                {Object.keys(this.state.messageGroupList).length > 0 ?\r\n                                                (this.state.messageGroupList.map((data, i) => {\r\n                                                    let editlink= \"/messagegroupedit/\"+i;\r\n                                                    \r\n                                                return(\r\n                                                    \r\n                                                <div className=\"card card-success shadow-none\">\r\n                                                    <div className=\"card-header\">\r\n                                                        <h3 className=\"card-title\">{data.message_group_name}</h3>\r\n                                                        <div className=\"card-tools\">\r\n                                                            <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\">\r\n                                                            <NavLink  to={editlink}><i className=\"far fa-edit\"></i></NavLink>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"card-tools\">\r\n                                                            <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" >\r\n                                                            <i className=\"fas fa-trash\" onClick={() => this.deleteMessageGroupHandler(i)} ></i>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\" >\r\n                                                        <div className=\"callout callout-success\" >\r\n                                                            <h6>Message Group Description :</h6>\r\n                                                            <p>{data.message_group_description}</p>\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                                )\r\n                                                }))\r\n                                                :\r\n                                                (this.state.loader ? \" \": \r\n                                                <div className=\"card card-danger shadow-none\">\r\n                                                <div className=\"card-header\">\r\n                                                    <h3 className=\"card-title\">Oops !</h3>\r\n                                                    <div className=\"card-tools\">\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"card-body\" >\r\n                                                    <div className=\"callout callout-danger\">\r\n                                                        <h5>Sorry There Is No Message-Group</h5>\r\n                                                        \r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                </div> \r\n                                                    )\r\n                                                \r\n                                                }       \r\n                                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                            </div>    \r\n                        </div>\r\n                        );\r\n            }\r\n       }\r\nexport default messageGroup;","C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupCreate.js",[],"C:\\Mefnevan\\front-end\\src\\services\\messageGroupService.js",["284"],"import axios from 'axios';\r\nimport { host,kyubi } from '../config';\r\nconst messageGroupService = {\r\n   \r\n    createMessageGroup: function (payload) {\r\n        // let allItems = [];\r\n        // let messageGroupItems = JSON.parse(localStorage.getItem(\"groupitems\"));\r\n        // if(messageGroupItems)\r\n        // { \r\n        //   allItems =  messageGroupItems;\r\n        //   allItems.unshift(payload); \r\n        // }\r\n        // else{\r\n        //   console.log('first time'); \r\n        //   allItems.unshift(payload);\r\n        // }\r\n        // localStorage.setItem(\"groupitems\",JSON.stringify(allItems));\r\n        // return true;\r\n        return new Promise((resolve, reject) => {\r\n          let options = {\r\n              method: 'POST',\r\n              url: host + '/api/messagegroup/create',\r\n              headers: {  'Accept': 'application/json', 'Content-Type': 'application/json' },\r\n              data: payload\r\n          }\r\n          axios(options)\r\n              .then(res => {\r\n                  console.log(\"In Success\");\r\n                  resolve(res)\r\n              })\r\n              .catch(err => {\r\n                  console.log(\"In Error\");\r\n                  reject(err)\r\n              })\r\n         })\r\n    },\r\n    updateMessageGroup: function (payload) {\r\n      \r\n      let messageGroupId = payload.message_group_id;\r\n      let allItems = JSON.parse(localStorage.getItem(\"groupitems\"));\r\n      let itemToEdit = JSON.parse(localStorage.getItem(\"groupitems\"))[messageGroupId];\r\n     \r\n      itemToEdit.message_group_name = payload.message_group_name;\r\n      itemToEdit.message_group_description = payload.message_group_description;\r\n      allItems[messageGroupId] = itemToEdit;\r\n      \r\n      localStorage.setItem(\"groupitems\",JSON.stringify(allItems));\r\n      return true;\r\n      \r\n  },\r\n  deleteMessageGroup: function (payload) {\r\n      \r\n    let messageGroupId = payload.message_group_id;\r\n    let allItems = JSON.parse(localStorage.getItem(\"groupitems\"));\r\n    allItems.splice(messageGroupId, 1);\r\n    console.log(allItems);\r\n    localStorage.setItem(\"groupitems\",JSON.stringify(allItems));\r\n    return true;\r\n   \r\n    \r\n}\r\n\r\n}\r\nexport default messageGroupService;",["285","286"],"C:\\Mefnevan\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupEdit.js",[],"C:\\GrammyWammy\\front-end\\src\\index.js",[],["287","288"],"C:\\GrammyWammy\\front-end\\src\\reportWebVitals.js",[],"C:\\GrammyWammy\\front-end\\src\\App.js",[],"C:\\GrammyWammy\\front-end\\src\\components\\common\\logger.js",[],"C:\\GrammyWammy\\front-end\\src\\components\\layouts\\AppLayout.js",[],"C:\\GrammyWammy\\front-end\\src\\routes\\AppRoute.js",["289"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\Login.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { Component} from \"react\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\n//import \"./login.css\";\r\nimport AuthServices from \"../../../services/authService\";\r\nimport loginHelper from \"../../../helper/loginHelper\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          email:\"\",\r\n          password:\"\",\r\n          loader:false,\r\n          error:false,\r\n          errorMessage:\"\",\r\n          loadingstatus:false\r\n        }\r\n        \r\n\r\n      }\r\n    /**\r\n    * @inputChangeHandller \r\n    * getting input field values\r\n    */\r\n    inputChangeHandller = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n    /**\r\n    * @checkBackgroundFetching \r\n    * Check  Wether Background Fetching is  done or not\r\n    */\r\n    checkBackgroundFetching() {\r\n            // setInterval(() => {\r\n            //     let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n            //     console.log(\"This check ++++++++++\",inBackgroundFetching);\r\n            //     if(inBackgroundFetching !== \"true\"){\r\n            //         console.log(\"This check 111++++++++++\",inBackgroundFetching);\r\n            //         this.props.history.push('/dashboard');       \r\n                               \r\n            //     }\r\n            // },2000);\r\n        }\r\n    /**\r\n    * @handleLoginFormValidation \r\n    * email and password field blank validation\r\n    */\r\n    handleLoginFormValidation() {\r\n        let fields = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        };\r\n        \r\n        let formIsValid = true;\r\n        let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let checkResult = emailRegex.test(String(this.state.email).toLowerCase());\r\n        if (!fields[\"email\"]) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Email Is Required\"});\r\n        return formIsValid;\r\n        } else if (checkResult === false) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Please enter a proper email\"});\r\n        return formIsValid;\r\n        }\r\n        else if (!fields[\"password\"]) {\r\n        formIsValid = false;\r\n        this.setState({errorMessage:\"Password Is Required\"});\r\n        return formIsValid;\r\n        }else{\r\n            formIsValid = true;\r\n            return formIsValid;\r\n        }\r\n        \r\n        return formIsValid;\r\n    }\r\n     /**\r\n    * @loginHandler \r\n    * in this function we are checking the email id, password\r\n    * and if the details are correct then login them and also take care about the remember password one\r\n    */\r\n    loginHandler = async (event) => {\r\n        event.preventDefault();\r\n        event.preventDefault();\r\n        let payload = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        }\r\n        if (this.handleLoginFormValidation()) {\r\n            this.setState({ error:false});\r\n            this.setState({errorMessage:\"\"});\r\n            this.setState({ loader: true });\r\n            let payload  ={\r\n                extensionId: kyubiExtensionId,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }\r\n            await AuthServices.login(payload).then(async result=>{\r\n                console.log(\"This I gggggggg\",result);\r\n                localStorage.setItem('token', result.data.token);\r\n                localStorage.setItem('inBackgroundFetching', true);\r\n                localStorage.setItem('userEmail', this.state.email);\r\n                if(result.data.code === 1){\r\n                    let LC=loginHelper.login();\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/dashboard');\r\n                        console.log(\"sorry\");\r\n                    }, 3000);\r\n                }else{\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n                }\r\n                \r\n                //this.checkBackgroundFetching();\r\n                 //console.log(LC);\r\n                 \r\n                //history.push(\"/dashboard\");\r\n            }).catch(error=>{\r\n                console.log(error);\r\n                this.setState({ loader: false });\r\n                this.setState({errorMessage:\"User not found or In-Active\"});\r\n                this.setState({ error:true});\r\n            });\r\n            \r\n\r\n\r\n        }else{\r\n            this.setState({ error:true});\r\n\r\n        }\r\n        //this.setState({ loader: false });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loader: true });\r\n        let token=localStorage.getItem('token');\r\n        let inBackgroundFetching=localStorage.getItem('inBackgroundFetching');\r\n        if(token){\r\n            if(inBackgroundFetching !== \"true\"){\r\n                this.props.history.push('/dashboard');    \r\n            }else{\r\n                this.setState({ loader: false });\r\n            }\r\n        }else{\r\n            this.setState({ loader: false });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n               <div className=\"login_screen_width\">\r\n                   {this.state.loader && (   \r\n                    <div className=\"overlay\">\r\n                       <img src=\"images/ajax-loader.gif\"></img>\r\n                    </div>\r\n                    )}\r\n                <div className=\"loginscreen\">\r\n                        <div className=\"graphics1\"></div>\r\n                        <div className=\"graphics2\"></div>\r\n                        <div className=\"logo\"><img src=\"images/logo1.svg\"></img></div>\r\n                            <div className=\"login_container\">\r\n                                <div className=\"login_welcome_block\">\r\n                                    Welcome,\r\n                                        <h3>Login to continue!</h3>\r\n                                </div>\r\n                                <div className=\"login_block\">\r\n                                    <form>\r\n                                        <label>\r\n                                        <span><img src=\"images/mail.svg\"></img></span>\r\n                                        <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email Address\"   onChange={this.inputChangeHandller}/>\r\n                                        </label>\r\n                                        <label>\r\n                                            <span><img src=\"images/lock.svg\"></img></span>\r\n                                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password\" onChange={this.inputChangeHandller}/>\r\n                                        </label>\r\n                                        {this.state.error && ( \r\n                                             <p class=\"text-danger\">{this.state.errorMessage}</p> \r\n                                         )} \r\n                                        <div className=\"text-right gap1\"><a href=\"#\" class=\"link\">Forgot Password?</a></div>\r\n                                        <button className=\"blue_btn\" type=\"button\" onClick={this.loginHandler}>LOGIN</button>\r\n                                        <div className=\"login_signup\">Don’t have an account? <a href=\"#\">Sign up</a></div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"footer\">\r\n                                    <p>Powered by <a href=\"#\">Tier5</a> and the <a href=\"#\">Tier5 Partnership</a></p>\r\n                                    <a href=\"#\"><img src=\"images/Path3.svg\"></img></a> <a href=\"#\"><img src=\"images/Messanger.svg\"></img></a>\r\n                               </div>\r\n                            </div>    \r\n                        </div>\r\n                    </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\NotFound.js",["310","311"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\ForgotPassword.js",["312","313","314","315","316","317","318"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\Auth\\logout.js",["319","320","321"],"import React, { Component} from \"react\";\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {kyubiExtensionId}  from \"../../../config\";\r\nimport \"./login.css\";\r\n\r\nclass logout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          \r\n        }\r\n        \r\n\r\n      }\r\n      componentDidMount(){\r\n        \r\n        localStorage.removeItem(\"fb_id\")\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"keywordsTally\")\r\n        localStorage.removeItem(\"userEmail\")\r\n        localStorage.removeItem('inBackgroundFetching');\r\n        localStorage.removeItem('fb_image');\r\n        localStorage.removeItem('fb_logged_id');\r\n        localStorage.removeItem('fb_name');\r\n        localStorage.removeItem('fb_username');\r\n        localStorage.removeItem(\"autoresponder\")\r\n        localStorage.removeItem(\"kyubi_user_token\")\r\n        localStorage.removeItem(\"user_id\")\r\n        localStorage.removeItem(\"default_message_text\")\r\n        localStorage.removeItem(\"fb_username\")\r\n        localStorage.removeItem(\"default_time_delay\")\r\n        localStorage.removeItem(\"default_message\")\r\n        localStorage.removeItem(\"individualThreadList\")\r\n        localStorage.removeItem('fbthread');\r\n        localStorage.removeItem('fbmunread');\r\n        localStorage.removeItem('fbprofile');\r\n        setTimeout(() => {\r\n            this.props.history.push('/');\r\n          }, 3000);\r\n      }\r\n    render() {\r\n        return (\r\n\r\n          <div className=\"wrapper\">\r\n            \r\n            \r\n\r\n            <div className=\"content-wrapper\">\r\n              <section className=\"content-header\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row mb-12\">\r\n                    <div className=\"col-sm-6\">\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                    <div class=\"alert alert-danger alert-dismissible\">\r\n                  \r\n                  <h5><i class=\"icon fas fa-ban\"></i> Alert!</h5>\r\n                  Thanks For Being With Us We are Loging You Out\r\n                </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default logout;","C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupCreate.js",[],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroup.js",["322","323","324"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\Main\\Dashboard.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React, { Component } from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport  {OpenFacebookInTab,CheckUserInfoFromFaccebook,OpenFacebookProfileInTab} from  '../../../helper/helper'\r\nimport Sidebar from \"../Common/sidebar\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport settingService from \"../../../services/setting\"\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      fb_image:\"\",\r\n      fb_name:\"\",\r\n      fb_username:\"\",\r\n      insta_image:\"\",\r\n      insta_name:\"\",\r\n      insta_username:\"\",\r\n      insta_logged_id:\"\",\r\n      fb_id:\"\",\r\n      fb_logged_id:\"\",\r\n      autoresponder:\"0\",\r\n      shownavbar:false,\r\n      loader:true,\r\n      openSidebar:false,\r\n    }\r\n  }\r\n  HideMenu = (event) => {\r\n    event.preventDefault();\r\n    //console.log(this.props.shownav);\r\n    this.setState({\r\n      openSidebar:false\r\n    })\r\n  }\r\n  ShowMenu = (event) => {\r\n    event.preventDefault();\r\n    //console.log(this.props.shownav);\r\n    this.setState({\r\n      openSidebar:true\r\n    })\r\n  }\r\n  fbHandler = async (event) => {\r\n    event.preventDefault();\r\n    let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n    console.log(\"You Are Loged in\",fb_logged_id);\r\n    if(fb_logged_id === \"false\"){\r\n      OpenFacebookInTab();\r\n    }else{\r\n      OpenFacebookProfileInTab();\r\n    }\r\n  }\r\n  autoresponderHandler  = async (event) =>{\r\n    let user_id=localStorage.getItem('user_id');\r\n    let autoresponder = 0;\r\n    let payload ={\r\n      user_id:user_id,\r\n      autoresponder:autoresponder\r\n    }\r\n    await settingService.updateAutoresponderSetting(payload).then(async result=>{\r\n      this.setState({\r\n        loader:true\r\n      })\r\n      console.log(result);\r\n      if(result.data.code==1){\r\n        let responsenewvalue =result.data;\r\n        console.log( responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n        localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('fb_id', responsenewvalue.payload.UserInfo.facebook_id);\r\n        localStorage.setItem('fb_username', responsenewvalue.payload.UserInfo.facebook_name);\r\n        localStorage.setItem('fb_name', responsenewvalue.payload.UserInfo.facebook_profile_name);\r\n        localStorage.setItem('fb_image', responsenewvalue.payload.UserInfo.facebook_image);\r\n        localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n        localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n        localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n        localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n        localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n        let fb_image=localStorage.getItem('fb_image');\r\n        let fb_username=localStorage.getItem('fb_username');\r\n        let fb_name=localStorage.getItem('fb_name');\r\n        let fb_id=localStorage.getItem('fb_id');\r\n        let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",fb_logged_id);\r\n        this.setState({\r\n        fb_image:fb_image,\r\n        fb_username:fb_username,\r\n        fb_name:fb_name,\r\n        fb_id:fb_id,\r\n        fb_logged_id:fb_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n\r\n      }\r\n    });\r\n\r\n    //CheckUserInfoFromFaccebook();\r\n  }\r\n  refreshHandler  = async (event) =>  {\r\n    event.preventDefault();\r\n    // this.setState({\r\n    //   loader:true\r\n    // })\r\n    CheckUserInfoFromFaccebook();\r\n    // setTimeout(() => {\r\n\r\n    //   let fb_image=localStorage.getItem('fb_image');\r\n    //   let fb_username=localStorage.getItem('fb_username');\r\n    //   let fb_name=localStorage.getItem('fb_name');\r\n    //   let fb_id=localStorage.getItem('fb_id');\r\n    //   let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n    //   let autoresponder=localStorage.getItem('autoresponder');\r\n    //   this.setState({\r\n    //     fb_image:fb_image,\r\n    //     fb_username:fb_username,\r\n    //     fb_name:fb_name,\r\n    //     fb_id:fb_id,\r\n    //     fb_logged_id:fb_logged_id,\r\n    //     autoresponder:autoresponder,\r\n    //     loader:false\r\n    //   })\r\n\r\n    // }, 4000);\r\n  }\r\n  componentDidMount(){\r\n    setTimeout(async () => {\r\n      \r\n      let user_id=localStorage.getItem('user_id');\r\n      let payload   ={user_id:user_id }\r\n      \r\n      await settingService.getUserDetails(payload).then(result  =>{\r\n        \r\n      if(result.data.code==1){\r\n        let responsenewvalue =result.data;\r\n        console.log( responsenewvalue.payload.UserInfo);\r\n        localStorage.setItem('kyubi_user_token', responsenewvalue.payload.UserInfo.kyubi_user_token);\r\n        localStorage.setItem('user_id', responsenewvalue.payload.UserInfo.user_id);\r\n        localStorage.setItem('insta_username', responsenewvalue.payload.UserInfo.instagram_profile_name);\r\n        localStorage.setItem('insta_name', responsenewvalue.payload.UserInfo.instagram_name);\r\n        localStorage.setItem('insta_image', responsenewvalue.payload.UserInfo.instagram_image);\r\n        localStorage.setItem('default_message', responsenewvalue.payload.UserSettings.default_message);\r\n        localStorage.setItem('default_message_text', responsenewvalue.payload.UserSettings.default_message_text);\r\n        localStorage.setItem('autoresponder', responsenewvalue.payload.UserSettings.autoresponder);\r\n        localStorage.setItem('default_time_delay', responsenewvalue.payload.UserSettings.default_time_delay);\r\n        localStorage.setItem('keywordsTally', JSON.stringify(responsenewvalue.payload.AutoResponderKeywords));\r\n        let insta_image=localStorage.getItem('insta_image');\r\n        let insta_username=localStorage.getItem('insta_username');\r\n        let insta_name=localStorage.getItem('insta_name');\r\n        \r\n        let insta_logged_id=localStorage.getItem('insta_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",insta_logged_id);\r\n        this.setState({\r\n        insta_image:insta_image,\r\n        insta_username:insta_username,\r\n        insta_name:insta_name,\r\n        insta_logged_id:insta_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n        \r\n\r\n      }\r\n      }).catch(error=>{\r\n\r\n        let fb_image=localStorage.getItem('fb_image');\r\n        let fb_username=localStorage.getItem('fb_username');\r\n        let fb_name=localStorage.getItem('fb_name');\r\n        let fb_id=localStorage.getItem('fb_id');\r\n        let fb_logged_id=localStorage.getItem('fb_logged_id');\r\n        let autoresponder=localStorage.getItem('autoresponder');\r\n        console.log(\"Yo Are Loged in\",fb_logged_id);\r\n        this.setState({\r\n        fb_image:fb_image,\r\n        fb_username:fb_username,\r\n        fb_name:fb_name,\r\n        fb_id:fb_id,\r\n        fb_logged_id:fb_logged_id,\r\n        autoresponder:autoresponder,\r\n        loader:false\r\n        })\r\n\r\n      })\r\n      \r\n\r\n    }, 3000);\r\n    \r\n  }\r\n    render() {\r\n        return (\r\n              <div className=\"dashboard_screen_width\">\r\n                 {this.state.loader && (   \r\n                    <div className=\"overlay\">\r\n                       <img src=\"images/ajax-loader.gif\"></img>\r\n                    </div>\r\n                    )}\r\n                  <div className=\"dashboard\">\r\n\r\n                    <div className=\"gen_header\">\r\n                      <div className=\"logo\"><img src=\"images/logo.svg\" alt=\"\"></img></div>\r\n                          <div className=\"hBtnWrapper\">\r\n                                <div className=\"toogler\">\r\n                                  <label className=\"switch_box box_1\">\r\n                                    <input type=\"checkbox\" class=\"switch_1\" id=\"swich\" name=\"togg\" />\r\n                                    <div className=\"toogler\"></div>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"slide_menu_click\">\r\n                                    <a href=\"#\" className=\"side_click\" onClick={this.ShowMenu}><img src=\"images/side_menu.svg\"></img></a>\r\n                                    {this.state.openSidebar ?\r\n                                     <div className=\"slider_menu active\">\r\n                                        <a href=\"#\" className=\"cross\" onClick={this.HideMenu}>X</a>\r\n                                        <div className=\"after_log_profile\">\r\n                                            <img src={this.state.insta_image} alt=\"\"></img>\r\n                                          <p>Welcome</p>\r\n                                          <h3>{this.state.insta_name}</h3>\r\n                                        </div>\r\n                                        <ul className=\"menunav\">\r\n                                            <li><a href=\"#\"><img src=\"images/menuicon4.svg\"></img> Dashboard</a></li>\r\n                                            <li><a href=\"#\"><img src=\"images/menuicon3.svg\"></img> Settings</a></li>\r\n                                            <li><a href=\"#\"><img src=\"images/menuicon2.svg\"></img> Friends</a></li>\r\n                                            <li><NavLink  to=\"/logout\" className=\"nav-link\"><img src=\"images/menuicon1.svg\"></img> Logout</NavLink></li>\r\n                                          </ul>\r\n                                     </div>\r\n                                     :\r\n                                     \"\"\r\n                                     }\r\n                                  </div> \r\n                              </div> \r\n                           </div>\r\n                           <div className=\"after_log_profile\">\r\n                              <img src={this.state.insta_image} alt=\"\"></img>\r\n                              <p>Welcome</p>\r\n                              <h3>{this.state.insta_name}</h3>\r\n                          </div>\r\n                          <div className=\"fb_login_request\">\r\n                            {!this.state.insta_logged_id ?\r\n                            <p>Please log-in to your Instagram profile</p>\r\n                            :\r\n                            \"\"\r\n                            }\r\n                            <a href=\"#\" class=\"bluebtn\"><img src=\"images/layer1.svg\"></img> Refresh</a>\r\n                            <a href=\"#\" class=\"whitebtn\"><img src=\"images/fb_blue.svg\"></img> Facebook</a>\r\n                          </div>\r\n                          <div class=\"footer\">\r\n                            <p>Powered by <a href=\"#\">Tier5</a> and the <a href=\"#\">Tier5 Partnership</a></p>\r\n                            <a href=\"#\"><img src=\"images/Path3.svg\"></img></a> <a href=\"#\"><img src=\"images/Messanger.svg\"></img></a>\r\n                          </div>\r\n\r\n                  </div>\r\n              </div>  \r\n        );\r\n    }\r\n}\r\nexport default Dashboard;","C:\\GrammyWammy\\front-end\\src\\components\\modules\\Setting\\setting.js",["351","352","353","354"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\MessageGroup\\messageGroupEdit.js",[],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponder.js",["355"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderCreate.js",["356","357"],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\AutoResponder\\autoResponderEdit.js",["358","359"],"C:\\GrammyWammy\\front-end\\src\\config.js",[],"C:\\GrammyWammy\\front-end\\src\\services\\authService.js",["360"],"C:\\GrammyWammy\\front-end\\src\\services\\messageGroupService.js",["361"],"C:\\GrammyWammy\\front-end\\src\\services\\setting.js",["362"],"C:\\GrammyWammy\\front-end\\src\\services\\autoResponderServices.js",["363"],"C:\\GrammyWammy\\front-end\\src\\helper\\loginHelper.js",[],"C:\\GrammyWammy\\front-end\\src\\helper\\helper.js",[],"C:\\GrammyWammy\\front-end\\src\\components\\modules\\Common\\sidebar.js",["364","365","366","367"],["368","369"],{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","severity":1,"message":"375","line":14,"column":7,"nodeType":"376","messageId":"377","endLine":14,"endColumn":15},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"380","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":55,"column":36,"nodeType":"383","messageId":"384","endLine":55,"endColumn":37,"suggestions":"385"},{"ruleId":"381","severity":1,"message":"382","line":55,"column":61,"nodeType":"383","messageId":"384","endLine":55,"endColumn":62,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":71,"column":9,"nodeType":"389","messageId":"390","endLine":71,"endColumn":28},{"ruleId":"374","severity":1,"message":"391","line":82,"column":13,"nodeType":"376","messageId":"377","endLine":82,"endColumn":20},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"381","severity":1,"message":"382","line":56,"column":36,"nodeType":"383","messageId":"384","endLine":56,"endColumn":37,"suggestions":"392"},{"ruleId":"381","severity":1,"message":"382","line":56,"column":61,"nodeType":"383","messageId":"384","endLine":56,"endColumn":62,"suggestions":"393"},{"ruleId":"387","severity":1,"message":"388","line":76,"column":9,"nodeType":"389","messageId":"390","endLine":76,"endColumn":28},{"ruleId":"374","severity":1,"message":"391","line":87,"column":13,"nodeType":"376","messageId":"377","endLine":87,"endColumn":20},{"ruleId":"374","severity":1,"message":"394","line":104,"column":25,"nodeType":"376","messageId":"377","endLine":104,"endColumn":27},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"395","line":4,"column":9,"nodeType":"376","messageId":"377","endLine":4,"endColumn":25},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"396","severity":1,"message":"397","line":49,"column":26,"nodeType":"398","messageId":"399","endLine":49,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":118,"column":26,"nodeType":"398","messageId":"399","endLine":118,"endColumn":28},{"ruleId":"400","severity":1,"message":"401","line":207,"column":33,"nodeType":"402","endLine":207,"endColumn":143},{"ruleId":"396","severity":1,"message":"397","line":230,"column":56,"nodeType":"398","messageId":"399","endLine":230,"endColumn":58},{"ruleId":"403","severity":1,"message":"404","line":232,"column":31,"nodeType":"402","endLine":232,"endColumn":108},{"ruleId":"403","severity":1,"message":"404","line":238,"column":33,"nodeType":"402","endLine":238,"endColumn":104},{"ruleId":"403","severity":1,"message":"404","line":244,"column":31,"nodeType":"402","endLine":244,"endColumn":97},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"374","severity":1,"message":"406","line":55,"column":13,"nodeType":"376","messageId":"377","endLine":55,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":83,"column":32,"nodeType":"398","messageId":"399","endLine":83,"endColumn":34},{"ruleId":"407","severity":1,"message":"408","line":193,"column":197,"nodeType":"409","endLine":193,"endColumn":224},{"ruleId":"396","severity":1,"message":"397","line":29,"column":32,"nodeType":"398","messageId":"399","endLine":29,"endColumn":34},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"407","severity":1,"message":"408","line":111,"column":41,"nodeType":"409","endLine":111,"endColumn":82},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"407","severity":1,"message":"408","line":149,"column":41,"nodeType":"409","endLine":149,"endColumn":82},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"411","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"412","line":4,"column":9,"nodeType":"376","messageId":"377","endLine":4,"endColumn":17},{"ruleId":"403","severity":1,"message":"413","line":37,"column":19,"nodeType":"402","endLine":37,"endColumn":113},{"ruleId":"403","severity":1,"message":"413","line":47,"column":23,"nodeType":"402","endLine":47,"endColumn":59},{"ruleId":"414","severity":1,"message":"415","line":51,"column":27,"nodeType":"402","endLine":51,"endColumn":66},{"ruleId":"374","severity":1,"message":"378","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":3,"column":20,"nodeType":"376","messageId":"377","endLine":3,"endColumn":30},{"ruleId":"374","severity":1,"message":"395","line":5,"column":9,"nodeType":"376","messageId":"377","endLine":5,"endColumn":25},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"370","replacedBy":"416"},{"ruleId":"372","replacedBy":"417"},{"ruleId":"370","replacedBy":"418"},{"ruleId":"372","replacedBy":"419"},{"ruleId":"374","severity":1,"message":"375","line":14,"column":7,"nodeType":"376","messageId":"377","endLine":14,"endColumn":15},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"405","line":7,"column":10,"nodeType":"376","messageId":"377","endLine":7,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":55,"column":36,"nodeType":"383","messageId":"384","endLine":55,"endColumn":37,"suggestions":"420"},{"ruleId":"381","severity":1,"message":"382","line":55,"column":61,"nodeType":"383","messageId":"384","endLine":55,"endColumn":62,"suggestions":"421"},{"ruleId":"387","severity":1,"message":"388","line":75,"column":9,"nodeType":"389","messageId":"390","endLine":75,"endColumn":28},{"ruleId":"374","severity":1,"message":"391","line":85,"column":13,"nodeType":"376","messageId":"377","endLine":85,"endColumn":20},{"ruleId":"374","severity":1,"message":"394","line":104,"column":25,"nodeType":"376","messageId":"377","endLine":104,"endColumn":27},{"ruleId":"414","severity":1,"message":"415","line":157,"column":24,"nodeType":"402","endLine":157,"endColumn":58},{"ruleId":"414","severity":1,"message":"415","line":163,"column":47,"nodeType":"402","endLine":163,"endColumn":75},{"ruleId":"414","severity":1,"message":"415","line":172,"column":47,"nodeType":"402","endLine":172,"endColumn":74},{"ruleId":"414","severity":1,"message":"415","line":176,"column":51,"nodeType":"402","endLine":176,"endColumn":78},{"ruleId":"403","severity":1,"message":"413","line":182,"column":74,"nodeType":"402","endLine":182,"endColumn":99},{"ruleId":"403","severity":1,"message":"413","line":184,"column":94,"nodeType":"402","endLine":184,"endColumn":106},{"ruleId":"403","severity":1,"message":"413","line":188,"column":51,"nodeType":"402","endLine":188,"endColumn":63},{"ruleId":"403","severity":1,"message":"413","line":188,"column":81,"nodeType":"402","endLine":188,"endColumn":93},{"ruleId":"403","severity":1,"message":"413","line":189,"column":37,"nodeType":"402","endLine":189,"endColumn":49},{"ruleId":"414","severity":1,"message":"415","line":189,"column":49,"nodeType":"402","endLine":189,"endColumn":77},{"ruleId":"403","severity":1,"message":"413","line":189,"column":88,"nodeType":"402","endLine":189,"endColumn":100},{"ruleId":"414","severity":1,"message":"415","line":189,"column":100,"nodeType":"402","endLine":189,"endColumn":132},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"380","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":55,"column":36,"nodeType":"383","messageId":"384","endLine":55,"endColumn":37,"suggestions":"422"},{"ruleId":"381","severity":1,"message":"382","line":55,"column":61,"nodeType":"383","messageId":"384","endLine":55,"endColumn":62,"suggestions":"423"},{"ruleId":"387","severity":1,"message":"388","line":71,"column":9,"nodeType":"389","messageId":"390","endLine":71,"endColumn":28},{"ruleId":"374","severity":1,"message":"391","line":82,"column":13,"nodeType":"376","messageId":"377","endLine":82,"endColumn":20},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"395","line":4,"column":9,"nodeType":"376","messageId":"377","endLine":4,"endColumn":25},{"ruleId":"374","severity":1,"message":"378","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":3,"column":20,"nodeType":"376","messageId":"377","endLine":3,"endColumn":30},{"ruleId":"374","severity":1,"message":"395","line":5,"column":9,"nodeType":"376","messageId":"377","endLine":5,"endColumn":25},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":18},{"ruleId":"374","severity":1,"message":"379","line":2,"column":20,"nodeType":"376","messageId":"377","endLine":2,"endColumn":30},{"ruleId":"374","severity":1,"message":"424","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":15},{"ruleId":"396","severity":1,"message":"397","line":62,"column":26,"nodeType":"398","messageId":"399","endLine":62,"endColumn":28},{"ruleId":"396","severity":1,"message":"397","line":132,"column":26,"nodeType":"398","messageId":"399","endLine":132,"endColumn":28},{"ruleId":"414","severity":1,"message":"415","line":193,"column":24,"nodeType":"402","endLine":193,"endColumn":58},{"ruleId":"403","severity":1,"message":"413","line":208,"column":37,"nodeType":"402","endLine":208,"endColumn":96},{"ruleId":"414","severity":1,"message":"415","line":208,"column":96,"nodeType":"402","endLine":208,"endColumn":128},{"ruleId":"403","severity":1,"message":"413","line":211,"column":41,"nodeType":"402","endLine":211,"endColumn":95},{"ruleId":"403","severity":1,"message":"413","line":218,"column":49,"nodeType":"402","endLine":218,"endColumn":61},{"ruleId":"414","severity":1,"message":"415","line":218,"column":61,"nodeType":"402","endLine":218,"endColumn":93},{"ruleId":"403","severity":1,"message":"413","line":219,"column":49,"nodeType":"402","endLine":219,"endColumn":61},{"ruleId":"414","severity":1,"message":"415","line":219,"column":61,"nodeType":"402","endLine":219,"endColumn":93},{"ruleId":"403","severity":1,"message":"413","line":220,"column":49,"nodeType":"402","endLine":220,"endColumn":61},{"ruleId":"414","severity":1,"message":"415","line":220,"column":61,"nodeType":"402","endLine":220,"endColumn":93},{"ruleId":"414","severity":1,"message":"415","line":221,"column":93,"nodeType":"402","endLine":221,"endColumn":125},{"ruleId":"403","severity":1,"message":"413","line":241,"column":29,"nodeType":"402","endLine":241,"endColumn":57},{"ruleId":"414","severity":1,"message":"415","line":241,"column":57,"nodeType":"402","endLine":241,"endColumn":86},{"ruleId":"403","severity":1,"message":"413","line":242,"column":29,"nodeType":"402","endLine":242,"endColumn":58},{"ruleId":"414","severity":1,"message":"415","line":242,"column":58,"nodeType":"402","endLine":242,"endColumn":88},{"ruleId":"403","severity":1,"message":"413","line":245,"column":43,"nodeType":"402","endLine":245,"endColumn":55},{"ruleId":"403","severity":1,"message":"413","line":245,"column":73,"nodeType":"402","endLine":245,"endColumn":85},{"ruleId":"403","severity":1,"message":"413","line":246,"column":29,"nodeType":"402","endLine":246,"endColumn":41},{"ruleId":"414","severity":1,"message":"415","line":246,"column":41,"nodeType":"402","endLine":246,"endColumn":69},{"ruleId":"403","severity":1,"message":"413","line":246,"column":80,"nodeType":"402","endLine":246,"endColumn":92},{"ruleId":"414","severity":1,"message":"415","line":246,"column":92,"nodeType":"402","endLine":246,"endColumn":124},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"374","severity":1,"message":"406","line":55,"column":13,"nodeType":"376","messageId":"377","endLine":55,"endColumn":24},{"ruleId":"396","severity":1,"message":"397","line":83,"column":32,"nodeType":"398","messageId":"399","endLine":83,"endColumn":34},{"ruleId":"407","severity":1,"message":"408","line":193,"column":197,"nodeType":"409","endLine":193,"endColumn":224},{"ruleId":"396","severity":1,"message":"397","line":29,"column":32,"nodeType":"398","messageId":"399","endLine":29,"endColumn":34},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"407","severity":1,"message":"408","line":111,"column":41,"nodeType":"409","endLine":111,"endColumn":82},{"ruleId":"374","severity":1,"message":"405","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":17},{"ruleId":"407","severity":1,"message":"408","line":149,"column":41,"nodeType":"409","endLine":149,"endColumn":82},{"ruleId":"374","severity":1,"message":"411","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"410","line":2,"column":15,"nodeType":"376","messageId":"377","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"412","line":4,"column":9,"nodeType":"376","messageId":"377","endLine":4,"endColumn":17},{"ruleId":"403","severity":1,"message":"413","line":37,"column":19,"nodeType":"402","endLine":37,"endColumn":113},{"ruleId":"403","severity":1,"message":"413","line":47,"column":23,"nodeType":"402","endLine":47,"endColumn":59},{"ruleId":"414","severity":1,"message":"415","line":51,"column":27,"nodeType":"402","endLine":51,"endColumn":66},{"ruleId":"370","replacedBy":"425"},{"ruleId":"372","replacedBy":"426"},"no-native-reassign",["427"],"no-negated-in-lhs",["428"],"no-unused-vars","'NotFound' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'loginHelper' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["429","430"],["431","432"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'payload' is assigned a value but never used.",["433","434"],["435","436"],"'LC' is assigned a value but never used.","'kyubiExtensionId' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'formIsValid' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'kyubi' is defined but never used.","'host' is defined but never used.","'Animated' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["427"],["428"],["427"],["428"],["437","438"],["439","440"],["441","442"],["443","444"],"'Sidebar' is defined but never used.",["427"],["428"],"no-global-assign","no-unsafe-negation",{"messageId":"445","fix":"446","desc":"447"},{"messageId":"448","fix":"449","desc":"450"},{"messageId":"445","fix":"451","desc":"447"},{"messageId":"448","fix":"452","desc":"450"},{"messageId":"445","fix":"453","desc":"447"},{"messageId":"448","fix":"454","desc":"450"},{"messageId":"445","fix":"455","desc":"447"},{"messageId":"448","fix":"456","desc":"450"},{"messageId":"445","fix":"457","desc":"447"},{"messageId":"448","fix":"458","desc":"450"},{"messageId":"445","fix":"459","desc":"447"},{"messageId":"448","fix":"460","desc":"450"},{"messageId":"445","fix":"461","desc":"447"},{"messageId":"448","fix":"462","desc":"450"},{"messageId":"445","fix":"463","desc":"447"},{"messageId":"448","fix":"464","desc":"450"},"removeEscape",{"range":"465","text":"466"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"467","text":"468"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"469","text":"466"},{"range":"470","text":"468"},{"range":"471","text":"466"},{"range":"472","text":"468"},{"range":"473","text":"466"},{"range":"474","text":"468"},{"range":"475","text":"466"},{"range":"476","text":"468"},{"range":"477","text":"466"},{"range":"478","text":"468"},{"range":"479","text":"466"},{"range":"480","text":"468"},{"range":"481","text":"466"},{"range":"482","text":"468"},[1776,1777],"",[1776,1776],"\\",[1801,1802],[1801,1801],[1796,1797],[1796,1796],[1821,1822],[1821,1821],[1796,1797],[1796,1796],[1821,1822],[1821,1821],[1776,1777],[1776,1776],[1801,1802],[1801,1801]]